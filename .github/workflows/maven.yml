# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Deploy Package
        run: mvn --batch-mode deploy
        env:
          GITHUB_TOKEN: ${{ secrets.PACKAGE_TOKEN }}

      # Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      # More information:
      # https://github.com/marketplace/actions/maven-dependency-tree-dependency-submission
      # https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/configuring-the-dependency-graph
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.PACKAGE_TOKEN }}

      - name: Set APP_BUILD_ARTIFACT
        run: echo "APP_BUILD_ARTIFACT=$(ls target/sage-*.jar)" >> "$GITHUB_ENV"

      - name: Set APP_POM_VERSION
        run: echo "APP_POM_VERSION=$(mvn help:evaluate -Dexpression=project.version  -q -DforceStdout)" >> "$GITHUB_ENV"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract Metadata for Docker
        id: metadata
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=raw,value=${{ env.APP_POM_VERSION }}-{{date 'YYYYMMDD-hhmmss' tz='America/Denver'}},priority=200
            type=raw,value=commit-{{sha}},priority=190
          images: |
            ghcr.io/${{ github.repository }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PACKAGE_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile-cloud
          build-args: APP_JAR=${{ env.APP_BUILD_ARTIFACT }}
          platforms:
            - linux/amd64
            - linux/arm64
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          push: true
